# Login

mutation login($user: String!, $password: String!) {
    login(user: $user, password: $password)
}

# Info

query whoAmI {
    whoAmI { user, roles }
}

query distributionInfo {
    distributionInfo { distribution, title }
}

# Consumers

query distributionConsumersInfo {
    distributionConsumersInfo { distribution, consumerProfile }
}

# Versions

query developerDesiredVersions {
    developerDesiredVersions { service, version { distribution, build } }
}

query clientDesiredVersions {
    clientDesiredVersions { service, version { distribution, developerBuild, clientBuild } }
}

query installedDesiredVersions ($distribution: String!) {
    installedDesiredVersions(distribution: $distribution) {
        service, version { distribution, developerBuild, clientBuild }
    }
}

# States

query serviceStates ($distribution: String!) {
    serviceStates(distribution: $distribution) {
        distribution instance { instance, service, directory, state { date, installDate, startDate, version { distribution, developerBuild, clientBuild }, updateToVersion { distribution, developerBuild, clientBuild }, updateError { critical, error }, failuresCount, lastExitCode } }
    }
}

# Users

query usersInfo ($human: Boolean!) {
    usersInfo (human: $human) { user, human, name, roles, email, notifications }
}

query userInfo ($user: String!) {
    usersInfo (user: $user) { user, human, name, roles, email, notifications }
}

mutation addUser ($user: String!, $human: Boolean!, $name: String!, $password: String!, $roles: [UserRole!]!, $email: String, $notifications: [String!]) {
    addUser (user: $user, human: $human, name: $name, password: $password, roles: $roles, email: $email, notifications: $notifications)
}

mutation changeUser ($user: String!, $name: String, $oldPassword: String, $password: String, $roles: [UserRole!], $email: String, $notifications: [String!]) {
    changeUser (user: $user, name: $name, oldPassword: $oldPassword, password: $password, roles: $roles, email: $email, notifications: $notifications)
}

mutation removeUser ($user: String!) {
    removeUser (user: $user)
}